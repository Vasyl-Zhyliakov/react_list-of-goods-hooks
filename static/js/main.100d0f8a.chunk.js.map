{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","sortBy","setSortBy","reversed","setReversed","visibleGoods","goods","reverse","preparedGoods","sort","good1","good2","alphabet","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,4EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,YAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAAmBH,EAASI,SAAxD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACMC,EA9BR,SACEC,EAAiBL,EAAkBM,GAEnC,IAAMC,EAAa,YAAOF,GAiB1B,OAfIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKL,EAASgB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXP,EACKC,EAAcD,UAGhBC,EAMcO,CAAiBlB,EAAiBI,EAAQE,GAO/D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SAAU,UAAW,CAAE,WAAYjB,IAAWL,EAASgB,WAEzDO,QAAS,kBAAMjB,EAAUN,EAASgB,WALpC,iCAUA,wBACEK,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CAAE,WAAYjB,IAAWL,EAASkB,SAE5DK,QAAS,kBAAMjB,EAAUN,EAASkB,SALpC,4BAUA,wBACEG,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CAAE,YAAaf,IAEzCgB,QAAS,kBAAMf,GAAaD,IAL9B,sBAUEF,GAAUE,IACV,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAzCjBjB,EAAUN,EAASI,cACnBI,GAAY,IAqCN,sBAWJ,6BACE,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cC3GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.100d0f8a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n  default = '',\n}\n\nfunction getPreparedGoods(\n  goods: string[], sortBy: SortType, reverse: boolean,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<SortType>(SortType.default);\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, reversed);\n\n  function getDefault() {\n    setSortBy(SortType.default);\n    setReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button', 'is-info', { 'is-light': sortBy !== SortType.alphabet },\n          )}\n          onClick={() => setSortBy(SortType.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button', 'is-success', { 'is-light': sortBy !== SortType.length },\n          )}\n          onClick={() => setSortBy(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button', 'is-warning', { 'is-light': !reversed },\n          )}\n          onClick={() => setReversed(!reversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || reversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => getDefault()}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}